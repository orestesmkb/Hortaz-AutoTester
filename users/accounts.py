# Generated by Selenium IDE
import pytest
import time
import json
import requests
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


def sign_up_requests():
    url = "https://apihortaz.bigu.digital/api/v1/user/create"

    user_data_json = {
        "address": "AutoTester1",
        "cellPhoneNumber": "111111111111",
        "cnpj": "",
        "cpf": "11111111111",
        "email": "AutoTester1",
        "gpsLatitude": 0,
        "gpsLongitude": 0,
        "name": "AutoTester1",
        "password": "12345678",
        "paymentInfo": [
            {
                "name": "string",
                "pixKey": "string"
            }
        ],
        "profile_pic_url": "string",
        "userTypes": [
            "BUYER"
        ],
        "validated": True
    }

    r = requests.post(url, json=user_data_json)
    print(r.status_code)
    print(r.content)
    print(r)
    return r.status_code


def test_sign_up():
    assert sign_up_requests() == 200


def login_requests():
    url = "https://apihortaz.bigu.digital/login"

    login_data_json = {"cellPhoneNumber": "111111111111",
                       "password": "12345678"}

    r = requests.post(url, json=login_data_json)
    print(r.status_code)
    print(r.content)
    print(r)
    return r.status_code


def test_login():
    assert login_requests() == 200


class HortazTester:

    def __init__(self):
        self.vars = {}
        self.driver = webdriver.Firefox()

    def teardown_method(self):
        self.driver.quit()

    def test_login(self):
        # Test name: Login
        # Step # | name | target | value
        # 1 | open | /hortaz/build/ |
        self.driver.get("https://portfolio.bigu.digital/hortaz/build/")
        # 2 | setWindowSize | 550x691 |
        self.driver.set_window_size(550, 691)
        # 3 | click | css=.button-1:nth-child(2) |
        self.driver.find_element(By.CSS_SELECTOR, ".button-1:nth-child(2)").click()
        # 4 | click | css=.button-1:nth-child(2) |
        self.driver.find_element(By.CSS_SELECTOR, ".button-1:nth-child(2)").click()
        # 5 | click | css=.button-1:nth-child(1) |
        self.driver.find_element(By.CSS_SELECTOR, ".button-1:nth-child(1)").click()
        # 6 | click | css=.input:nth-child(1) |
        self.driver.find_element(By.CSS_SELECTOR, ".input:nth-child(1)").click()
        # 7 | type | name=password | 12345678
        self.driver.find_element(By.NAME, "password").send_keys("12345678")
        # 8 | type | css=.input:nth-child(1) | (082) 99133-2448
        self.driver.find_element(By.CSS_SELECTOR, ".input:nth-child(1)").send_keys("(082) 99133-2448")
        # 9 | click | name=password |
        self.driver.find_element(By.NAME, "password").click()
        # 10 | click | css=.button-1 |
        self.driver.find_element(By.CSS_SELECTOR, ".button-1").click()

# sign_up_requests()
# login_requests()
